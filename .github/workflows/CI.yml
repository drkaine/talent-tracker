name: Pipeline-CI

on:
  push:
    branches: 
      - '*'

jobs:
  ci-front:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run Jest tests
        run: npm test

      - name: Run ESLint
        run: npm run lint

  ci-back:
    runs-on: ubuntu-latest
    continue-on-error: false

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - uses: actions/checkout@v2

      - name: Copy .env
        run: cp .env.example .env

      - name: Set SQLite database
        run: |
          sudo apt-get install sqlite3
          touch database/database.sqlite
          sed -i 's/DB_CONNECTION=mysql/DB_CONNECTION=sqlite/' .env
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=database\/database.sqlite/' .env

      - name: Install composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Laravel security-checker
        run: composer global require enlightn/security-checker

      - name: Setup Project
        run: php artisan key:generate

      - name: Run Unit tests
        env:
          APP_ENV: testing
          DB_CONNECTION: mysql
          DB_USERNAME: laravel_test_user
          DB_PASSWORD: super_secret
          DB_DATABASE: laravel_test_db
        run: php artisan test --testdox
      
      - name: PHP-CS-FIXER
        run: vendor/bin/php-cs-fixer fix --dry-run

      - name: PHPStan
        run: vendor/bin/phpstan analyse
